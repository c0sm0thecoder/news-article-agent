version: '3.8'

services:
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: ragdb
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d ragdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ragdb
      - DB_USER=raguser
      - DB_PASSWORD=ragpassword
      - KAFKA_CLIENT_ID=news-rag-client
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USERNAME=${KAFKA_USERNAME}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
      - KAFKA_TOPIC_NAME=${KAFKA_TOPIC_NAME}
      - KAFKA_GROUP_ID_PREFIX=${KAFKA_GROUP_ID_PREFIX}
      - KAFKA_SSL=${KAFKA_SSL}
      - KAFKA_SASL=${KAFKA_SASL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST}
    ports:
      - "3002:3002"
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data: